@page "/employee/create-employee"
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using Blazored.Toast.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Papara.Wasm.Helpers
@using Papara.Wasm.Shared.Models.Expense.Departments
@using Papara.Wasm.Shared.Models.Expense.Employees
@inject HttpClient Http
@inject IToastService Toast
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider

<h3>👷 Yeni Personel Oluştur</h3>

@if (userRole != "Admin")
{
    <p class="text-danger">Bu sayfaya yalnızca yöneticiler erişebilir.</p>
}
else
{
    <EditForm Model="employee" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Ad:</label>
            <InputText class="form-control" @bind-Value="employee.FirstName" />
        </div>

        <div class="mb-3">
            <label>İkinci Ad (varsa):</label>
            <InputText class="form-control" @bind-Value="employee.MiddleName" />
        </div>

        <div class="mb-3">
            <label>Soyad:</label>
            <InputText class="form-control" @bind-Value="employee.LastName" />
        </div>

        <div class="mb-3">
            <label>TC Kimlik No:</label>
            <InputText class="form-control"
                       @bind-Value="employee.IdentityNumber"
                       maxlength="11"
                       pattern="[0-9]{11}"
                       title="11 haneli sayı giriniz" />
        </div>

        <div class="mb-3">
            <label>IBAN:</label>
            <InputText class="form-control"
                       @bind-Value="employee.IBAN"
                       maxlength="26"
                       pattern="[A-Z]{2}[0-9A-Z]{14,24}"
                       title="Geçerli bir IBAN giriniz. Örn: TRXXXXXXXXXXXX" />
        </div>

        <div class="mb-3">
            <label>Departman:</label>
            <select class="form-select" @bind="employee.DepartmentId">
                <option value="">Departman Seçiniz</option>
                @foreach (var dept in departments)
                {
                    <option value="@dept.Id">@dept.DepartmentName</option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary">➕ Oluştur</button>
    </EditForm>
}

@code {
    private CreateEmployeeRequest employee = new();
    private List<DepartmentResponse> departments = new();
    private string? userRole;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userRole = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;

            // Departmanları yükle
            departments = await Http.GetFromJsonAsync<List<DepartmentResponse>>("departments") ?? new();
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("employees", employee);

            if (response.IsSuccessStatusCode)
            {
                Toast.ShowSuccess("Personel başarıyla oluşturuldu.");
                Navigation.NavigateTo("/employee/profile");
            }
            else
            {
                await ValidationErrorHelper.ShowErrorsAsync(response, Toast);
            }
        }
        catch (Exception ex)
        {
            Toast.ShowError($"Hata oluştu: {ex.Message}");
        }
    }

}

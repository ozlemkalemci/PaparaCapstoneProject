@page "/reports/personnel-expense-history"

<h3 class="mb-4">📋 Personel Masraf Geçmişi</h3>

@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using System.Security.Claims
@using Blazored.Toast.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Papara.Wasm.Extensions
@using Papara.Wasm.Services
@using Papara.Wasm.Shared.Models
@using Papara.Wasm.Shared.Models.Expense
@using Papara.Wasm.Shared.Models.Expense.Reports
@inject HttpClient Http
@inject IToastService Toast
@inject AuthenticationStateProvider AuthProvider

@if (isLoading)
{
    <p>Yükleniyor...</p>
}
else if (expenses?.Any() != true)
{
    <p>Hiç masraf bulunamadı.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Tarih</th>
                <th>Tutar</th>
                <th>Durum</th>
                <th>Kategori</th>
                <th>Açıklama</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in expenses)
            {
                <tr>
                    <td>@expense.ExpenseDate.ToString("dd.MM.yyyy")</td>
                    <td>@expense.Amount.ToString("C")</td>
                    <td>@expense.Status.GetDisplayName()</td>
                    <td>@expense.ExpenseType</td>
                    <td>@expense.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PersonnelExpenseReportResponse>? expenses;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated == true)
            {
                var empIdClaim = user.FindFirst("EmployeeId")?.Value;

                if (!string.IsNullOrEmpty(empIdClaim) && long.TryParse(empIdClaim, out var employeeId))
                {
                    expenses = await Http.GetFromJsonAsync<List<PersonnelExpenseReportResponse>>(
                        $"expensereports/personnel-expense-history?EmployeeId={employeeId}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Masraf listeleme hatası: {ex}");
            Toast.ShowError("Masraflar yüklenirken bir hata oluştu.");
        }
        finally
        {
            isLoading = false;
        }
    }
}
